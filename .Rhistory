View(t)
t$hasdat_amhg
t$hasdat_man
t$Wobs
t$Sobs
t$dAobs
t <- bam_data(W_obs, Qhat = qhat)
source('~/GitHub/geoBAMr/R/dataprep.R', echo=TRUE)
t <- bam_data(W_obs, Qhat = qhat)
t <- bam_data(W_obs, S_obs, Qhat = qhat)
t$hasdat_amhg
t$hasdat_man
t <- bam_data(W_obs, S_obs, dA_obs, Qhat = qhat)
t$hasdat_man
t$hasdat_amhg
t$Wobs
mean(log(t$Wobs))
maxmin(log(t$Wobs)) + log(0.5) + log(0.5)
source('~/GitHub/geoBAMr/R/dataprep.R', echo=TRUE)
t <- bam_data(W_obs, S_obs, dA_obs, Qhat = qhat)
t$hasdat_amhg
t$hasdat_man
source('~/GitHub/geoBAMr/R/priorCalc.R', echo=TRUE)
tpriors <- bam_priors(t)
source('~/GitHub/geoBAMr/R/bam_settings.R', echo=TRUE)
tpriors <- bam_priors(t)
source('~/GitHub/geoBAMr/R/utils.R', echo=TRUE)
tpriors <- bam_priors(t)
View(tpriors)
View(tpriors, logWc_hat = 4)
tpriors <- bam_priors(t, logWc=4)
tpriors <- bam_priors(t, logWc_hat=4)
View(tpriors)
source('~/GitHub/geoBAMr/R/estimate.R', echo=TRUE)
tfin <- bam_estimate(t, bampriors = tpriors)
source('~/GitHub/geoBAMr/R/dataprep.R', echo=TRUE)
W_obs <- cbind(c(NA,75,55), c(58,70,56), c(59,72,56))
S_obs <- cbind(c(0.001, 0.0015, 0.001), c(0.002, NA, 0.002), c(0.002, 0.002, 0.004))
dA_obs <- cbind(c(10, 20, 10), c(15, 7, 15), c(15, 12, NA))
bamdata <- bam_data(w=W_obs, s=S_obs, dA= dA_obs, Qhat=qhat)
qhat <- as.vector(rep(500, ncol(W_obs)))
bamdata <- bam_data(w=W_obs, s=S_obs, dA= dA_obs, Qhat=qhat)
bamdata$hasdat_man
bamdata <- bam_data(w=W_obs, dA= dA_obs, Qhat=qhat)
dA_obs <- cbind(c(10, 20, 10), c(15, 7, 15), c(15, 12, NA))
variant = 'amhg'
dA <- dA_obs# datalist$dA
if(!dA & variant == 'amhg')
if(dA && variant == 'amhg')
if(is(dA) && is(variant == 'amhg'))
is(dA) && is(variant == 'amhg')
is(dA) & is(variant == 'amhg')
exists(dA)
exists(dA)
exists('dA')
if(exists('dA') & is(variant == 'amhg'))
if(exists('dA') & is(variant == 'amhg')){
stop('AMHG-only geoBAM cannot process a dA matrix!')}
if(exists('dA')){
stop('AMHG-only geoBAM cannot process a dA matrix!')}
if(exists('dA'&& (variant == 'amhg'))){
stop('AMHG-only geoBAM cannot process a dA matrix!')}
if(exists('dA'&& variant == 'amhg')){
stop('AMHG-only geoBAM cannot process a dA matrix!')}
vara=iant == 'amhg'
varaiant == 'amhg'
variant == 'amhg'
var <- variant == 'amhg'
var <- variant == 'amhg'
if(exists('dA'&& variant)){
stop('AMHG-only geoBAM cannot process a dA matrix!')}
if(exists('dA'&& variant==T)){
stop('AMHG-only geoBAM cannot process a dA matrix!')}
if(exists('dA')&& variant==T)){
stop('AMHG-only geoBAM cannot process a dA matrix!')}
if(exists('dA')&& variant==T){
stop('AMHG-only geoBAM cannot process a dA matrix!')}
if(exists('dA')&& variant=='amhg'){
stop('AMHG-only geoBAM cannot process a dA matrix!')}
W_obs <- cbind(c(NA,75,55), c(58,70,56), c(59,72,56))
S_obs <- cbind(c(0.001, 0.0015, 0.001), c(0.002, NA, 0.002), c(0.002, 0.002, 0.004))
dA_obs <- cbind(c(10, 20, 10), c(15, 7, 15), c(15, 12, NA))
source('~/GitHub/geoBAMr/R/dataprep.R', echo=TRUE)
qhat <- as.vector(rep(500, ncol(W_obs)))
t <- bam_data(w=W_obs, s=S_obs, variant = 'amhg', Qhat = Qhat)
t <- bam_data(w=W_obs, s=S_obs, variant = 'amhg', Qhat = qhat)
rm(dA)
t <- bam_data(w=W_obs, s=S_obs, variant = 'amhg', Qhat = qhat)
source('~/GitHub/geoBAMr/R/dataprep.R', echo=TRUE)
t <- bam_data(w=W_obs, s=S_obs, variant = 'amhg', Qhat = qhat)
source('~/GitHub/geoBAMr/R/dataprep.R', echo=TRUE)
t <- bam_data(w=W_obs, s=S_obs, variant = 'amhg', Qhat = qhat)
source('~/GitHub/geoBAMr/R/dataprep.R', echo=TRUE)
t <- bam_data(w=W_obs, s=S_obs, variant = 'amhg', Qhat = qhat)
View(t)
t$dAobs
t <- bam_data(w=W_obs, s=S_obs, variant = 'manning_amhg', Qhat = qhat)
View(t)
source('~/GitHub/geoBAMr/R/dataprep.R', echo=TRUE)
t <- bam_data(w=W_obs, s=S_obs, variant = 'manning_amhg', Qhat = qhat)
t <- bam_data(w=W_obs, s=S_obs, variant = 'manning', Qhat = qhat)
t <- bam_data(w=W_obs, s=S_obs, dA=dA_obs, variant = 'amhg', Qhat = qhat)
t <- bam_data(w=W_obs, s=S_obs, variant = 'amhg', Qhat = qhat)
t$Sobs
t$Wobs
t$hasdat_amhg
t$hasdat_man
View(t)
t <- bam_data(w=W_obs, s=S_obs, dA=dA_obs, variant = 'manning', Qhat = qhat)
t$Wobs
t$Sobs
t$dAobs
t$ntot_amhg
t$ntot_man
source('~/GitHub/geoBAMr/R/dataprep.R', echo=TRUE)
t <- bam_data(w=W_obs, s=S_obs, dA=dA_obs, variant = 'manning', Qhat = qhat)
t$Sobs
t$ntot_amhg
t$ntot_man
t$Wobs
t$dAobs
t <- bam_data(w=W_obs, s=S_obs, dA=dA_obs, variant = 'manning_amhg', Qhat = qhat)
t$Wobs
t$Sobs
t$dAobs
t$hasdat_amhg
t$hasdat_man
source('~/GitHub/geoBAMr/R/dataprep.R', echo=TRUE)
t <- bam_data(w=W_obs, s=S_obs, dA=dA_obs, variant = 'manning_amhg', Qhat = qhat)
t$Wobs
t$Sobs
t$dAobs
t$hasdat_man
t$hasdat_amhg
t$Sobs
#Fit stan model----------------------------------------------------
fit1 <- stan(
file = "C:\\Users\\craig\\Documents\\GitHub\\geoBAMr\\inst\\stan\\master.stan",
data=t,
chains=3,
iter=3000,
cores=getOption("mc.cores", default = parallel::detectCores()),
control = list(adapt_delta=0.95)
)
library(rstan)
#Fit stan model----------------------------------------------------
fit1 <- stan(
file = "C:\\Users\\craig\\Documents\\GitHub\\geoBAMr\\inst\\stan\\master.stan",
data=t,
chains=3,
iter=3000,
cores=getOption("mc.cores", default = parallel::detectCores()),
control = list(adapt_delta=0.95)
)
t$hasdat_amhg
source('~/GitHub/geoBAMr/R/bam_settings.R', echo=TRUE)
source('~/GitHub/geoBAMr/R/estimate.R', echo=TRUE)
source('~/GitHub/geoBAMr/R/priorCalc.R', echo=TRUE)
t <- bam_data(w=W_obs, s=S_obs, dA=dA_obs, variant = 'manning_amhg', Qhat = qhat)
t_priors <- bam_priors(t)
source('~/GitHub/geoBAMr/R/utils.R', echo=TRUE)
t_priors <- bam_priors(t)
View(t_priors)
t_priors <- bam_priors(t, logWc_hat = 3)
qpred <- bam_estimate(t, variant='manning_amhg', bampriors = t_priors)
source('~/GitHub/geoBAMr/R/stanmodels.R', echo=TRUE)
qpred <- bam_estimate(t, variant='manning_amhg', bampriors = t_priors)
source('~/GitHub/geoBAMr/R/zzz.R', echo=TRUE)
qpred <- bam_estimate(t, variant='manning_amhg', bampriors = t_priors)
t$hasdat_amhg
t$hasdat_man
pkgbuild::compile_dll() # see note below
roxygen2::roxygenise(load = "source")
pkgbuild::compile_dll() # see note below
roxygen2::roxygenise(load = "source")
pkgbuild::compile_dll() # see note below
roxygen2::roxygenise(load = "source")
setwd('C:\\Users\\craig\\Box Sync\\Ongoing Projects\\colin_geoBAM')
W_obs <- readRDS('W.rds')
S_obs <- readRDS('S.rds')
H_obs <- readRDS('H.rds')
dA_obs <- readRDS('DA.rds')
source('~/GitHub/geoBAMr/R/dataprep.R', echo=TRUE)
bamdata <- bam_data(w=W_obs, s=S_obs, dA=dA_obs, variant='manning_amhg')
bamdata <- bam_data(w=W_obs, s=S_obs, dA=dA_obs, variant='manning_amhg', qhat = rep(100, ncol(W_obs)))
bamdata <- bam_data(w=W_obs, s=S_obs, dA=dA_obs, variant='manning_amhg', Qhat = rep(100, ncol(W_obs)))
bampriors <- bam_priors(bamdata, classification='expert')
source('~/GitHub/geoBAMr/R/bam_settings.R', echo=TRUE)
bampriors <- bam_priors(bamdata, classification='expert')
source('~/GitHub/geoBAMr/R/utils.R', echo=TRUE)
source('~/GitHub/geoBAMr/R/priorCalc.R', echo=TRUE)
bampriors <- bam_priors(bamdata, classification='expert')
View(bampriors)
View(bampriors)
View(W_obs)
View(bampriors)
source('~/GitHub/geoBAMr/R/bam_settings.R', echo=TRUE)
source('~/GitHub/geoBAMr/R/dataprep.R', echo=TRUE)
bampriors <- bam_priors(bamdata, classification='expert')
source('~/GitHub/geoBAMr/R/dataprep.R', echo=TRUE)
bampriors <- bam_priors(bamdata, classification='expert')
source('~/GitHub/geoBAMr/R/bam_settings.R', echo=TRUE)
bampriors <- bam_priors(bamdata, classification='expert')
source('~/GitHub/geoBAMr/R/dataprep.R', echo=TRUE)
bampriors <- bam_priors(bamdata, classification='expert')
source('~/GitHub/geoBAMr/R/dataprep.R', echo=TRUE)
bampriors <- bam_priors(bamdata, classification='expert')
source('~/GitHub/geoBAMr/R/dataprep.R', echo=TRUE)
bampriors <- bam_priors(bamdata, classification='expert')
source('~/GitHub/geoBAMr/R/dataprep.R', echo=TRUE)
bampriors <- bam_priors(bamdata, classification='expert')
source('~/GitHub/geoBAMr/R/dataprep.R', echo=TRUE)
bampriors <- bam_priors(bamdata, classification='expert')
source('~/GitHub/geoBAMr/R/dataprep.R', echo=TRUE)
bampriors <- bam_priors(bamdata, classification='expert')
source('~/GitHub/geoBAMr/R/dataprep.R', echo=TRUE)
bampriors <- bam_priors(bamdata, classification='expert')
source('~/GitHub/geoBAMr/R/bam_settings.R', echo=TRUE)
source('~/GitHub/geoBAMr/R/dataprep.R', echo=TRUE)
bampriors <- bam_priors(bamdata, classification='expert')
source('~/GitHub/geoBAMr/R/dataprep.R', echo=TRUE)
bampriors <- bam_priors(bamdata, classification='expert')
source('~/GitHub/geoBAMr/R/dataprep.R', echo=TRUE)
bampriors <- bam_priors(bamdata, classification='expert')
source('~/GitHub/geoBAMr/R/dataprep.R', echo=TRUE)
bampriors <- bam_priors(bamdata, classification='expert')
apply(Wobs, 1, classify_func)
apply(W_obs, 1, classify_func)
source('~/GitHub/geoBAMr/R/bam_settings.R', echo=TRUE)
source('~/GitHub/geoBAMr/R/bam_settings.R', echo=TRUE)
bampriors <- bam_priors(bamdata, classification='expert')
source('~/GitHub/geoBAMr/R/dataprep.R', echo=TRUE)
bampriors <- bam_priors(bamdata, classification='expert')
source('~/GitHub/geoBAMr/R/dataprep.R', echo=TRUE)
bampriors <- bam_priors(bamdata, classification='expert')
View(bampriors)
source('~/GitHub/geoBAMr/R/dataprep.R', echo=TRUE)
bampriors <- bam_priors(bamdata, classification='expert')
bampriors[[1]]
source('~/GitHub/geoBAMr/R/estimate.R', echo=TRUE)
q <- bam_estimate(bamdata, bampriors, variant = 'manning')
source('~/GitHub/geoBAMr/R/estimate.R', echo=TRUE)
q <- bam_estimate(bamdata, bampriors, variant = 'manning')
source('~/GitHub/geoBAMr/R/dataprep.R', echo=TRUE)
bampriors <- bam_priors(bamdata, classification='expert')
source('~/GitHub/geoBAMr/R/dataprep.R', echo=TRUE)
bampriors <- bam_priors(bamdata, classification='expert')
source('~/GitHub/geoBAMr/R/dataprep.R', echo=TRUE)
bampriors <- bam_priors(bamdata, classification='expert')
source('~/GitHub/geoBAMr/R/dataprep.R', echo=TRUE)
bampriors <- bam_priors(bamdata, classification='expert')
View(bampriors)
source('~/GitHub/geoBAMr/R/dataprep.R', echo=TRUE)
bampriors <- bam_priors(bamdata, classification='expert')
source('~/GitHub/geoBAMr/R/estimate.R', echo=TRUE)
q <- bam_estimate(bamdata, bampriors, variant = 'manning')
source('~/GitHub/geoBAMr/R/dataprep.R', echo=TRUE)
bampriors <- bam_priors(bamdata, classification='expert')
source('~/GitHub/geoBAMr/R/dataprep.R', echo=TRUE)
bampriors <- bam_priors(bamdata, classification='expert')
View(bampriors)
16+24
source('~/GitHub/geoBAMr/R/dataprep.R', echo=TRUE)
bampriors <- bam_priors(bamdata, classification='expert')
View(bampriors)
#only keep the full list of geoBAM priors
bampriors <- list(bampriors[[1]], bampriors[[2]])
View(bampriors)
bampriors <- bam_priors(bamdata, classification='expert')
#only keep the full list of geoBAM priors
bampriors <- c(bampriors[[1]], bampriors[[2]])
View(bampriors)
sd(1,2)
sd(1,2,3)
sd(c(1,2))
sd(c(1,NA))
sd(c(1,NA), na.rm=T)
sd(c(1,NA,3), na.rm=T)
sd(c(1,NA,3), na.rm=T)
sd(c(1,NA), na.rm=T)
sd(c(1), na.rm=T)
sd(c(1,2), na.rm=T)
source('~/GitHub/geoBAMr/R/priorCalc.R', echo=TRUE)
w2 <- c(c(1,2,3), c(NA, NA, NA), c(NA, 2, 3))
w2 <- cbind(c(1,2,3), c(NA, NA, NA), c(NA, 2, 3))
View(w2)
estimate_b(w2)
#' Estimate AHG b exponent using bam data
#'
#' @param Wobs Observed W,as a space-down, time-across matrix.
#' @export
estimate_b <- function(Wobs) {
Wobs[Wobs <= 0] <- NA # I replaced missing values with 0 so Stan will accept
lwsd <- apply(log(Wobs), 1, function(x) sd(x, na.rm = TRUE))
print(lwsd)
if(is.na(lwsd)){
stop('Need at least 3 non-NA observations to calculate b prior!')
}
#expert classification
temp <- c(0.227633914,
0.24121913,
0.204897294,
0.204451567,
0.192887656,
0.188263846,
0.211646902,
0.176051924,
0.164989336,
0.14444077,
0.179925708,
0.151049254,
0.107294865,
0.125720128,
0.117940326,
0.404257196)
class <- apply(Wobs, 1, classify_func)
b_hat <- ifelse(class != 17, temp[class], 0.0569 + 0.3822 * lwsd) #repeat by sptial unit
#global r2: 0.726
}
estimate_b(w2)
#' Estimate AHG b exponent using bam data
#'
#' @param Wobs Observed W,as a space-down, time-across matrix.
#' @export
estimate_b <- function(Wobs) {
Wobs[Wobs <= 0] <- NA # I replaced missing values with 0 so Stan will accept
lwsd <- apply(log(Wobs), 1, function(x) sd(x, na.rm = TRUE))
print(lwsd)
# if(is.na(lwsd)){
#   stop('Need at least 3 non-NA observations to calculate b prior!')
# }
#expert classification
temp <- c(0.227633914,
0.24121913,
0.204897294,
0.204451567,
0.192887656,
0.188263846,
0.211646902,
0.176051924,
0.164989336,
0.14444077,
0.179925708,
0.151049254,
0.107294865,
0.125720128,
0.117940326,
0.404257196)
class <- apply(Wobs, 1, classify_func)
b_hat <- ifelse(class != 17, temp[class], 0.0569 + 0.3822 * lwsd) #repeat by sptial unit
#global r2: 0.726
}
estimate_b(w2)
#' Estimate AHG b exponent using bam data
#'
#' @param Wobs Observed W,as a space-down, time-across matrix.
#' @export
estimate_b <- function(Wobs) {
Wobs[Wobs <= 0] <- NA # I replaced missing values with 0 so Stan will accept
lwsd <- apply(log(Wobs), 1, function(x) sd(x, na.rm = TRUE))
if(any(is.na(lwsd))){
stop('Need at least 3 non-NA observations to calculate b prior!')
}
#expert classification
temp <- c(0.227633914,
0.24121913,
0.204897294,
0.204451567,
0.192887656,
0.188263846,
0.211646902,
0.176051924,
0.164989336,
0.14444077,
0.179925708,
0.151049254,
0.107294865,
0.125720128,
0.117940326,
0.404257196)
class <- apply(Wobs, 1, classify_func)
b_hat <- ifelse(class != 17, temp[class], 0.0569 + 0.3822 * lwsd) #repeat by sptial unit
#global r2: 0.726
}
estimate_b(w2)
source('~/GitHub/geoBAMr/R/priorCalc.R', echo=TRUE)
source('~/GitHub/geoBAMr/R/dataprep.R', echo=TRUE)
bamdata <- bam_data(w=w2)
bamdata <- bam_data(w=w2, s=cbind(c(1,2,3),c(1,2,3),c(1,2,3)), Qhat=rep(1,ncol(w2)))
bamdata <- bam_data(w=w2, s=cbind(c(1,2,3),c(1,2,3),c(1,2,3)), Qhat=rep(1,ncol(w2)), variant='amhg')
View(bamdata)
sum(!is.na(w2))<2
#make sure at least 3 observations for width sd calculation for priors
w_test <- apply(w2,2,is.na)
View(w_test)
#make sure at least 3 observations for width sd calculation for priors
w_test <- apply(w2,1,is.na)
#make sure at least 3 observations for width sd calculation for priors
w_test <- apply(w2,1,sum(!is.na))
#make sure at least 3 observations for width sd calculation for priors
w_test <- apply(w2,1,sum(is.na))
#make sure at least 3 observations for width sd calculation for priors
w_test <- apply(w2,1,function{sum(!is.na())}))
#make sure at least 3 observations for width sd calculation for priors
w_test <- apply(w2,1,function{sum(!is.na())})
#make sure at least 3 observations for width sd calculation for priors
w_test <- apply(w2,1,function(x){sum(!is.na())})
#make sure at least 3 observations for width sd calculation for priors
w_test <- apply(w2,2, function(x){sum(x, na.rm=T)})
if(any(w_test)<2){
stop('Need at least 3 non-NA observations to calculate b prior!')
}
if(any(w_test<2)){
stop('Need at least 3 non-NA observations to calculate b prior!')
}
source('~/GitHub/geoBAMr/R/dataprep.R', echo=TRUE)
bamdata <- bam_data(w=w2, s=cbind(c(1,2,3),c(1,2,3),c(1,2,3)), Qhat=rep(1,ncol(w2)), variant='amhg')
bampriors <- bam_priors(bamdata, classification='expert')
bamdata <- bam_data(w=W_obs, s=S_obs, dA=dA_obs, variant='manning_amhg', Qhat=rep(100,ncol(W_obs)))
w_test <- apply(W_obs,2, function(x){sum(x, na.rm=T)})  #make sure at least 3 observations for width sd calculation for priors
w_test
if(any(w_test<2)){
stop('Need at least 3 non-NA width observations to calculate some priors!')}
bamdata <- bam_data(w=W_obs, s=S_obs, dA=dA_obs, variant='manning_amhg', Qhat=rep(100,ncol(W_obs)))
source('~/GitHub/geoBAMr/R/dataprep.R', echo=TRUE)
bamdata <- bam_data(w=W_obs, s=S_obs, dA=dA_obs, variant='manning_amhg', Qhat=rep(100,ncol(W_obs)))
View(bamdata)
source('~/GitHub/geoBAMr/R/priorCalc.R', echo=TRUE)
source('~/GitHub/geoBAMr/R/bam_settings.R', echo=TRUE)
source('~/GitHub/geoBAMr/R/utils.R', echo=TRUE)
source('~/GitHub/geoBAMr/R/estimate.R', echo=TRUE)
bampriors <- bam_priors(bamdata, varaint='manning_amhg', classification='expert')
bampriors <- bam_priors(bamdata, variant='manning_amhg', classification='expert')
View(bampriors)
source('~/GitHub/geoBAMr/R/dataprep.R', echo=TRUE)
bampriors <- bam_priors(bamdata, variant='manning_amhg', classification='expert')
View(bampriors)
source('~/GitHub/geoBAMr/R/dataprep.R', echo=TRUE)
bampriors <- bam_priors(bamdata, variant='manning_amhg', classification='expert')
View(bampriors)
source('~/GitHub/geoBAMr/R/dataprep.R', echo=TRUE)
bampriors <- bam_priors(bamdata, variant='manning_amhg', classification='expert')
View(bampriors)
source('~/GitHub/geoBAMr/R/dataprep.R', echo=TRUE)
View(bampriors)
View(bampriors)
#only keep the full list of geoBAM priors
bampriors <- c(bampriors[[1]], bampriors[[3]])
View(bampriors)
source('~/GitHub/geoBAMr/R/dataprep.R', echo=TRUE)
bampriors <- bam_priors(bamdata, variant='manning_amhg', classification='expert')
View(bampriors)
#only keep the full list of geoBAM priors
bampriors <- c(bampriors[[2]], bampriors[[3]])
View(bampriors)
library(geoBAMr)
setwd('C:\\Users\\craig\\Box Sync\\Ongoing Projects\\colin_geoBAM')
library(geoBAMr)
setwd('C:\\Users\\craig\\Box Sync\\Ongoing Projects\\colin_geoBAM')
W_obs <- readRDS('W.rds')
S_obs <- readRDS('S.rds')
H_obs <- readRDS('H.rds')
dA_obs <- readRDS('DA.rds')
qhat <- as.vector(rep(500, ncol(W_obs)))
bamdata <- bam_data(w=W_obs, dA=dA_obs, s=S_obs, Qhat=qhat, variant='manning')
bamdata <- bam_data(w=W_obs, dA=dA_obs, s=S_obs, Qhat=qhat, variant='manning_amhg')
View(dA_obs)
bamdata <- bam_data(w=W_obs, s=S_obs, Qhat=qhat, variant='manning_amhg')
rm(bamdata)
bamdata <- bam_data(w=W_obs, s=S_obs, Qhat=qhat, variant='manning_amhg')
s=S_obs
dA=dA_obs
manning_ready <- !is.null(s) && !is.null(dA)
datalist <- list(Wobs = w,
Sobs = s,
dAobs = dA,
logQ_hat = log(Qhat))
bamdata <- bam_data(w=W_obs, s=S_obs, Qhat=qhat, variant='amhg')
bamdata <- bam_data(w=W_obs, s=S_obs,dA=dA, Qhat=qhat, variant='amhg')
bamdata <- bam_data(w=W_obs, s=S_obs,dA=dA, Qhat=qhat, variant='manning_amhg')
rm(dA_obs)
bamdata <- bam_data(w=W_obs, s=S_obs,dA=dA, Qhat=qhat, variant='manning_amhg')
(-5/3)*-1_1
(-5/3)*-1*1
-1*-1*-1
w <- c(c(6,3,7,4),c(5,6,2,5),c(NA,NA,NA,NA),c(1,4,NA,2))
w
w <- matrix(c(6,3,7,4),c(5,6,2,5),c(NA,NA,NA,NA),c(1,4,NA,2))
w <- rbind(c(6,3,7,4),c(5,6,2,5),c(NA,NA,NA,NA),c(1,4,NA,2))
w
w_test <- apply(w,2, function(x){sum(x, na.rm=T)})
w_test
w_test <- apply(w,2, function(x){sum(x*1, na.rm=T)})
w_test
w <- rbind(c(NA,3,7,4),c(NA,6,2,5),c(NA,NA,NA,NA),c(NA,1,6,3,2))
w
w <- rbind(c(NA,3,7,4),c(NA,6,2,5),c(NA,NA,NA,NA),c(NA,1,6,3,NA))
w
w_test <- apply(w,2, function(x){sum(x*1, na.rm=T)})
w_test
w_test <- apply(w,2, function(x){sum(x > 0)})
w_test <- apply(w,2, function(x){sum(x > 0, na.rm+T)})
w_test <- apply(w,2, function(x){sum(x > 0, na.rm=T)})
w
w_test <- apply(w,2, function(x){sum(x > 0, na.rm=T)})
w_test
w <- rbind(c(NA,3,7,4),c(NA,0,2,5),c(NA,NA,NA,NA),c(NA,1,6,3,NA))
w
w_test <- apply(w,2, function(x){sum(x > 0, na.rm=T)})
w_test <- apply(w,2, function(x){sum(x > 0)})
w_test <- apply(w,2, function(x){sum(x > 0, na.rm=T)})
apply(log(w), 1, sd, na.rm = TRUE)
